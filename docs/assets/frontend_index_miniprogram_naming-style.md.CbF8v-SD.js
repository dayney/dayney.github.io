import{_ as s,c as a,o as i,V as n}from"./chunks/framework.CsbsVE7l.js";const g=JSON.parse('{"title":"小程序命名规范","description":"","frontmatter":{"outline":"deep","editLink":false},"headers":[],"relativePath":"frontend/index/miniprogram/naming-style.md","filePath":"frontend/index/miniprogram/naming-style.md","lastUpdated":1748791719000}'),l={name:"frontend/index/miniprogram/naming-style.md"},p=n(`<h1 id="小程序命名规范" tabindex="-1">小程序命名规范 <a class="header-anchor" href="#小程序命名规范" aria-label="Permalink to &quot;小程序命名规范&quot;">​</a></h1><h2 id="_1-基本原则" tabindex="-1">1. 基本原则 <a class="header-anchor" href="#_1-基本原则" aria-label="Permalink to &quot;1. 基本原则&quot;">​</a></h2><ul><li>遵循微信小程序官方规范</li><li>保持命名语义化</li><li>保持项目结构清晰</li></ul><h2 id="_2-项目结构规范" tabindex="-1">2. 项目结构规范 <a class="header-anchor" href="#_2-项目结构规范" aria-label="Permalink to &quot;2. 项目结构规范&quot;">​</a></h2><h3 id="_2-1-目录结构" tabindex="-1">2.1 目录结构 <a class="header-anchor" href="#_2-1-目录结构" aria-label="Permalink to &quot;2.1 目录结构&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>.</span></span>
<span class="line"><span>├── api.js    // 当前模块所有的api</span></span>
<span class="line"><span>├── const.js  // 当前模块所有的常量</span></span>
<span class="line"><span>├── utils.js  // 当前模块所有通用的方法</span></span>
<span class="line"><span>├── component</span></span>
<span class="line"><span>│   ├── activeCouponFromSky</span></span>
<span class="line"><span>│   │   ├── activeCouponFromSky.js</span></span>
<span class="line"><span>│   │   ├── activeCouponFromSky.json</span></span>
<span class="line"><span>│   │   ├── activeCouponFromSky.wxml</span></span>
<span class="line"><span>│   │   └── activeCouponFromSky.wxss</span></span>
<span class="line"><span>│   └── ……</span></span>
<span class="line"><span>├── archivesDetails</span></span>
<span class="line"><span>│   ├── api.js     // 当前页面使用的api</span></span>
<span class="line"><span>│   ├── const.js   // 当前页面使用的常量</span></span>
<span class="line"><span>│   ├── utils.js   // 当前页面使用通用的方法</span></span>
<span class="line"><span>│   ├── component  // 当前页面抽离出来的组件</span></span>
<span class="line"><span>│   │   ├── componentDemo</span></span>
<span class="line"><span>│   │   │   ├── componentDemo.js</span></span>
<span class="line"><span>│   │   │   ├── componentDemo.json</span></span>
<span class="line"><span>│   │   │   ├── componentDemo.wxml</span></span>
<span class="line"><span>│   │   │   └── componentDemo.wxss</span></span>
<span class="line"><span>│   │   └── ……</span></span>
<span class="line"><span>│   ├── archivesDetails.js</span></span>
<span class="line"><span>│   ├── archivesDetails.json</span></span>
<span class="line"><span>│   ├── archivesDetails.wxml</span></span>
<span class="line"><span>│   └── archivesDetails.wxss</span></span>
<span class="line"><span>└── ……</span></span></code></pre></div><h3 id="_2-2-文件命名规范" tabindex="-1">2.2 文件命名规范 <a class="header-anchor" href="#_2-2-文件命名规范" aria-label="Permalink to &quot;2.2 文件命名规范&quot;">​</a></h3><ul><li>页面文件：使用小写字母，多个单词用连字符（-）连接</li><li>组件文件：使用小写字母，多个单词用连字符（-）连接</li><li>工具类文件：使用小写字母，多个单词用连字符（-）连接</li></ul><h2 id="_3-代码命名规范" tabindex="-1">3. 代码命名规范 <a class="header-anchor" href="#_3-代码命名规范" aria-label="Permalink to &quot;3. 代码命名规范&quot;">​</a></h2><h3 id="_3-1-常量管理" tabindex="-1">3.1 常量管理 <a class="header-anchor" href="#_3-1-常量管理" aria-label="Permalink to &quot;3.1 常量管理&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// const.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> PROVINCE_MAX_LENGTH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 默认打开省区最大数量</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> QQ_MAP_GLJS_KEY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;XXXX&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 腾讯地图KEY</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 定义后端api中返回的 code</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ERRNO</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  SUCCESS: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用场景</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (code </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ERRNO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SUCCESS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {}</span></span></code></pre></div><h3 id="_3-2-变量命名" tabindex="-1">3.2 变量命名 <a class="header-anchor" href="#_3-2-变量命名" aria-label="Permalink to &quot;3.2 变量命名&quot;">​</a></h3><ul><li>使用驼峰命名法</li><li>变量名要有意义</li><li>布尔类型变量使用 is、has、can 等前缀</li></ul><h3 id="_3-3-函数命名" tabindex="-1">3.3 函数命名 <a class="header-anchor" href="#_3-3-函数命名" aria-label="Permalink to &quot;3.3 函数命名&quot;">​</a></h3><ul><li>使用驼峰命名法</li><li>函数名要能表达其功能</li><li>事件处理函数使用 handle 前缀</li></ul><h3 id="_3-4-组件命名" tabindex="-1">3.4 组件命名 <a class="header-anchor" href="#_3-4-组件命名" aria-label="Permalink to &quot;3.4 组件命名&quot;">​</a></h3><ul><li>使用驼峰命名法</li><li>组件名要能表达其功能</li><li>组件名要有意义</li></ul><h3 id="_3-5-样式命名" tabindex="-1">3.5 样式命名 <a class="header-anchor" href="#_3-5-样式命名" aria-label="Permalink to &quot;3.5 样式命名&quot;">​</a></h3><ul><li>使用小写字母</li><li>多个单词用连字符（-）连接</li><li>使用 BEM 命名规范</li></ul><h2 id="_4-最佳实践" tabindex="-1">4. 最佳实践 <a class="header-anchor" href="#_4-最佳实践" aria-label="Permalink to &quot;4. 最佳实践&quot;">​</a></h2><h3 id="_4-1-页面配置" tabindex="-1">4.1 页面配置 <a class="header-anchor" href="#_4-1-页面配置" aria-label="Permalink to &quot;4.1 页面配置&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 页面配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Page</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  data: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  onLoad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 生命周期函数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 方法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_4-2-组件配置" tabindex="-1">4.2 组件配置 <a class="header-anchor" href="#_4-2-组件配置" aria-label="Permalink to &quot;4.2 组件配置&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 组件配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  properties: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 属性</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  data: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  methods: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 方法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_4-3-工具函数" tabindex="-1">4.3 工具函数 <a class="header-anchor" href="#_4-3-工具函数" aria-label="Permalink to &quot;4.3 工具函数&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 工具函数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> formatDate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 格式化日期</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="_5-命名规范检查清单" tabindex="-1">5. 命名规范检查清单 <a class="header-anchor" href="#_5-命名规范检查清单" aria-label="Permalink to &quot;5. 命名规范检查清单&quot;">​</a></h2><ul><li>[ ] 目录结构符合规范</li><li>[ ] 文件命名符合规范</li><li>[ ] 常量使用大写字母</li><li>[ ] 变量使用驼峰命名法</li><li>[ ] 函数使用驼峰命名法</li><li>[ ] 组件使用驼峰命名法</li><li>[ ] 样式使用小写字母和连字符</li><li>[ ] 使用 BEM 命名规范</li><li>[ ] 布尔类型变量使用 is、has、can 等前缀</li><li>[ ] 事件处理函数使用 handle 前缀</li><li>[ ] 组件名有意义</li><li>[ ] 函数名能表达其功能</li><li>[ ] 变量名有意义</li></ul>`,28),e=[p];function t(h,k,r,c,d,o){return i(),a("div",null,e)}const y=s(l,[["render",t]]);export{g as __pageData,y as default};
