import{_ as e,c as t,o as s,V as a}from"./chunks/framework.CsbsVE7l.js";const n="/assets/prettierrc-001.ChXqcrc1.png",m=JSON.parse('{"title":".prettierrc","description":"","frontmatter":{"outline":"deep","editLink":false},"headers":[],"relativePath":"frontend/engineering/example/prettierrc.md","filePath":"frontend/engineering/example/prettierrc.md","lastUpdated":1748922098000}'),r={name:"frontend/engineering/example/prettierrc.md"},p=a(`<h1 id="prettierrc" tabindex="-1">.prettierrc <a class="header-anchor" href="#prettierrc" aria-label="Permalink to &quot;.prettierrc&quot;">​</a></h1><p>方便团队的<strong>code style</strong>统一。</p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>安装的方式有很多，我采用<strong>vs code</strong>的插件方式来安装了使用</p><ol><li>打开 VSCode。</li><li>确保已安装 Prettier 插件（&quot;Prettier - Code formatter&quot;）。</li><li>在 VSCode 中，打开项目的根目录。</li><li>打开命令面板（Ctrl + Shift + P），输入 Prettier: Create Configuration File。</li><li>按下回车键，这将自动在项目根目录中生成 .prettierrc 文件。</li></ol><h2 id="_1-代码格式化工具。" tabindex="-1">1. 代码格式化工具。 <a class="header-anchor" href="#_1-代码格式化工具。" aria-label="Permalink to &quot;1. 代码格式化工具。&quot;">​</a></h2><ul><li><p>有两种模式，在项目代码中用来检测代码的规范，如使用命令<code>npm run format</code>, 如果需要使用<code>git hook</code>可以配合<code>husky</code>一起使用,会有更好的体验</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&quot;format&quot;: &quot;prettier --config ./.prettierrc --write ./*.* ./src/**/*.js ./src/**/*.ts ./src/**/*.css ./src/**/*.vue&quot;,</span></span></code></pre></div></li><li><p>配合<strong>VS Code</strong>中的插件prettier,在编写代码的时候时时提示代码的风格</p></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># .prettierrc</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  &quot;printWidth&quot;: 120,</span></span>
<span class="line"><span>  &quot;singleQuote&quot;: true,</span></span>
<span class="line"><span>  &quot;semi&quot;: true,</span></span>
<span class="line"><span>  &quot;tabWidth&quot;: 2,</span></span>
<span class="line"><span>  &quot;arrowParens&quot;: &quot;avoid&quot;,</span></span>
<span class="line"><span>  &quot;bracketSpacing&quot;: true,</span></span>
<span class="line"><span>  &quot;trailingComma&quot;: &quot;none&quot;</span></span>
<span class="line"><span>}</span></span></code></pre></div><h2 id="_2-在项目中实践-检查配置是否生效" tabindex="-1">2. 在项目中实践--检查配置是否生效 <a class="header-anchor" href="#_2-在项目中实践-检查配置是否生效" aria-label="Permalink to &quot;2. 在项目中实践--检查配置是否生效&quot;">​</a></h2><p>在<strong>vscode</strong>中安装<strong>Prettier</strong>插件，设置 <strong>Prettier</strong>是默认格式化工具，查看当前<strong><strong>Prettier</strong></strong>配置是否生效。</p><ol><li><p>选中项目中一个文件</p></li><li><p>有件格式化当前文件 <img src="`+n+`" alt="image-20240920151439128"></p></li><li><p>查看是否按照 <strong>.prettierrc</strong>的方式来格式化文件的</p></li></ol><h2 id="_2-在项目中实践-设置自动格式化" tabindex="-1">2. 在项目中实践--设置自动格式化 <a class="header-anchor" href="#_2-在项目中实践-设置自动格式化" aria-label="Permalink to &quot;2. 在项目中实践--设置自动格式化&quot;">​</a></h2><p>在当前项目的**.vscode<strong>目录下新建文件</strong>settings.json**添加如下配置</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># 文件路径是 .vscode/settings.json</span></span>
<span class="line"><span></span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;,   // 设置 Prettier 为默认格式化工具</span></span>
<span class="line"><span>  &quot;editor.formatOnSave&quot;: true                                         //  保存时自动格式化</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>每次修改好文件，保存文件的时候，就会自动按照当前配置好的**.prettierrc**的格式来格式化文件。</p><p>参考网站 prettier官网<a href="https://prettier.io/docs/en/options.html" target="_blank" rel="noreferrer">https://prettier.io/docs/en/options.html</a></p>`,16),o=[p];function i(l,c,d,u,h,g){return s(),t("div",null,o)}const _=e(r,[["render",i]]);export{m as __pageData,_ as default};
