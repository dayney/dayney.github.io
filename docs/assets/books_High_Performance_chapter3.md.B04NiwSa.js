import{_ as e,c as p,o as t,V as o}from"./chunks/framework.58kB5Xqm.js";const _=JSON.parse('{"title":"高性能JavaScript读书笔记--DOM编程","description":"","frontmatter":{"outline":"deep","editLink":false},"headers":[],"relativePath":"books/High_Performance/chapter3.md","filePath":"books/High_Performance/chapter3.md","lastUpdated":null}'),a={name:"books/High_Performance/chapter3.md"},l=o('<h1 id="高性能javascript读书笔记-dom编程" tabindex="-1"><a class="header-anchor" href="#高性能javascript读书笔记-dom编程">高性能JavaScript读书笔记--DOM编程</a></h1><h1 id="需要加强的" tabindex="-1"><a class="header-anchor" href="#需要加强的">需要加强的</a></h1><p>[ ] 1. document.createTextNode()</p><p>[ ] 2. element.clone()</p><p>[ ] 3. HTML集合:常用的document.querySelector(); document.querySelectorAll();</p><p>3.1 document.getElementsByName()</p><p>3.2 document.getsByClassName()</p><p>3.3 document.getElementsByTagName()</p><p>3.4 document.images</p><p>3.5 document.links</p><p>3.6 document.forms</p><p>3.5 document.forms[0].elements</p><p>[ ] 4. node 相关</p><p>4.1 nodeName</p><p>4.2 nodeType</p><p>4.3 tagName（非node，但）</p><p>[ ] 5. tagName</p><p>[ ] 6. 获取DOM元素，用<code>jquery</code>比较多，有相似的地方</p><p>6.1 childNodes</p><p>6.2 nextSibling</p><p>6.3 firstNodes</p><p>6.4 lastNodes</p><p>6.5 previousSibling</p><p>6.6 children只有在IE6/7/8中使用</p><p>6.7 className</p><p>6.8 appendChild</p><p>6.9 replaceChild</p><p>[ ] 7. 获取元素的计算属性：</p><p>7.1 getComputedStyle()/currentStyle</p><p>7.2 cssText</p><p>[ ] 8. 文档片段：</p><p>7.1 document.createDocumentFragment()</p><p><strong>爬虫相关</strong></p><ol><li>document.images</li><li>document.links</li></ol><p>[ ] 可以参考使用<code>css3 animation</code>来制作动画，原则：能用css解决的尽量使用css解决；</p><p><strong>制作动画需要谨慎的事</strong></p><ol><li>使用绝对位置定位页面上的动画元素，将其脱离文档流；</li><li>让元素动起来。当它扩大时，会临时覆盖部分页面。但这只是页面一个小区域的重绘过程，不会产生重排并重绘页面的大部分内容；</li><li>当动画结束时恢复定位，从而只会下移一次文档的其他元素。</li></ol><h3 id="小结" tabindex="-1"><a class="header-anchor" href="#小结">小结</a></h3><blockquote><ol><li><p>最小化DOM访问次数，尽可能在JavaScript端处理；</p></li><li><p>如果需要多次访问某个DOM节点，请使用局部变量存储它的引用；</p></li><li><p>小心处理HTML集合，因为它实时连接着底层文档。把集合的长度缓存到一个变量中，并在迭代中使用它。如果需要经常操作集合，建议把它拷贝到一个数组中。</p></li><li><p>如果可能的话，使用速度更快的API，比如querySelectorAll和firstElementChild</p></li><li><p>要留意重绘和重排；批量修改样式时，&quot;离线&quot;操作DOM树，使用缓存，并减少访问布局信息的次数；</p></li><li><p>动画中使用绝对定位，使用拖放代理；</p></li><li><p>使用事件委托来减少事件处理器的数量；</p></li></ol></blockquote>',39),c=[l];function i(n,s,r,d,m,h){return t(),p("div",null,c)}const g=e(a,[["render",i]]);export{_ as __pageData,g as default};
