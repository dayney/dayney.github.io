import{_ as a,c as e,o,V as d}from"./chunks/framework.CsbsVE7l.js";const q=JSON.parse('{"title":"JavaScript代码格式规范","description":"","frontmatter":{"outline":"deep","editLink":false},"headers":[],"relativePath":"frontend/index/guide/coding-standards/javascript-format.md","filePath":"frontend/index/guide/coding-standards/javascript-format.md","lastUpdated":1748791719000}'),c={name:"frontend/index/guide/coding-standards/javascript-format.md"},r=d('<h1 id="javascript代码格式规范" tabindex="-1">JavaScript代码格式规范 <a class="header-anchor" href="#javascript代码格式规范" aria-label="Permalink to &quot;JavaScript代码格式规范&quot;">​</a></h1><h2 id="_1-文件" tabindex="-1">1. 文件 <a class="header-anchor" href="#_1-文件" aria-label="Permalink to &quot;1. 文件&quot;">​</a></h2><h5 id="建议-javascript-文件使用无-bom-的-utf-8-编码。" tabindex="-1">[建议] <code>JavaScript</code> 文件使用无 <code>BOM</code> 的 <code>UTF-8</code> 编码。 <a class="header-anchor" href="#建议-javascript-文件使用无-bom-的-utf-8-编码。" aria-label="Permalink to &quot;[建议] `JavaScript` 文件使用无 `BOM` 的 `UTF-8` 编码。&quot;">​</a></h5><h5 id="建议-在文件结尾处-保留一个空行。" tabindex="-1">[建议] 在文件结尾处，保留一个空行。 <a class="header-anchor" href="#建议-在文件结尾处-保留一个空行。" aria-label="Permalink to &quot;[建议] 在文件结尾处，保留一个空行。&quot;">​</a></h5><h2 id="_2-结构" tabindex="-1">2. 结构 <a class="header-anchor" href="#_2-结构" aria-label="Permalink to &quot;2. 结构&quot;">​</a></h2><h3 id="_2-1-缩进" tabindex="-1">2.1 缩进 <a class="header-anchor" href="#_2-1-缩进" aria-label="Permalink to &quot;2.1 缩进&quot;">​</a></h3><h5 id="强制-使用-2-个空格做为一个缩进层级-不允许使用-4-个空格-或-tab-字符。" tabindex="-1">[强制] 使用 <code>2</code> 个空格做为一个缩进层级，不允许使用 <code>4</code> 个空格 或 <code>tab</code> 字符。 <a class="header-anchor" href="#强制-使用-2-个空格做为一个缩进层级-不允许使用-4-个空格-或-tab-字符。" aria-label="Permalink to &quot;[强制] 使用 `2` 个空格做为一个缩进层级，不允许使用 `4` 个空格 或 `tab` 字符。&quot;">​</a></h5><h5 id="强制-switch-下的-case-和-default-必须增加一个缩进层级。" tabindex="-1">[强制] <code>switch</code> 下的 <code>case</code> 和 <code>default</code> 必须增加一个缩进层级。 <a class="header-anchor" href="#强制-switch-下的-case-和-default-必须增加一个缩进层级。" aria-label="Permalink to &quot;[强制] `switch` 下的 `case` 和 `default` 必须增加一个缩进层级。&quot;">​</a></h5><h3 id="_2-2-空格" tabindex="-1">2.2 空格 <a class="header-anchor" href="#_2-2-空格" aria-label="Permalink to &quot;2.2 空格&quot;">​</a></h3><h5 id="强制-二元运算符两侧必须有一个空格-一元运算符与操作对象之间不允许有空格。" tabindex="-1">[强制] 二元运算符两侧必须有一个空格，一元运算符与操作对象之间不允许有空格。 <a class="header-anchor" href="#强制-二元运算符两侧必须有一个空格-一元运算符与操作对象之间不允许有空格。" aria-label="Permalink to &quot;[强制] 二元运算符两侧必须有一个空格，一元运算符与操作对象之间不允许有空格。&quot;">​</a></h5><h5 id="强制-用作代码块起始的左花括号-前必须有一个空格。" tabindex="-1">[强制] 用作代码块起始的左花括号 <code>{</code> 前必须有一个空格。 <a class="header-anchor" href="#强制-用作代码块起始的左花括号-前必须有一个空格。" aria-label="Permalink to &quot;[强制] 用作代码块起始的左花括号 `{` 前必须有一个空格。&quot;">​</a></h5><h5 id="强制-if-else-for-while-function-switch-do-try-catch-finally-关键字后-必须有一个空格。" tabindex="-1">[强制] <code>if / else / for / while / function / switch / do / try / catch / finally</code> 关键字后，必须有一个空格。 <a class="header-anchor" href="#强制-if-else-for-while-function-switch-do-try-catch-finally-关键字后-必须有一个空格。" aria-label="Permalink to &quot;[强制] `if / else / for / while / function / switch / do / try / catch / finally` 关键字后，必须有一个空格。&quot;">​</a></h5><h5 id="强制-在对象创建时-属性中的-之后必须有空格-之前不允许有空格。" tabindex="-1">[强制] 在对象创建时，属性中的 <code>:</code> 之后必须有空格，<code>:</code> 之前不允许有空格。 <a class="header-anchor" href="#强制-在对象创建时-属性中的-之后必须有空格-之前不允许有空格。" aria-label="Permalink to &quot;[强制] 在对象创建时，属性中的 `:` 之后必须有空格，`:` 之前不允许有空格。&quot;">​</a></h5><h5 id="强制-函数声明、具名函数表达式、函数调用中-函数名和-之间不允许有空格。" tabindex="-1">[强制] 函数声明、具名函数表达式、函数调用中，函数名和 <code>(</code> 之间不允许有空格。 <a class="header-anchor" href="#强制-函数声明、具名函数表达式、函数调用中-函数名和-之间不允许有空格。" aria-label="Permalink to &quot;[强制] 函数声明、具名函数表达式、函数调用中，函数名和 `(` 之间不允许有空格。&quot;">​</a></h5><h5 id="强制-和-前不允许有空格。" tabindex="-1">[强制] <code>,</code> 和 <code>;</code> 前不允许有空格。 <a class="header-anchor" href="#强制-和-前不允许有空格。" aria-label="Permalink to &quot;[强制] `,` 和 `;` 前不允许有空格。&quot;">​</a></h5><h5 id="强制-在函数调用、函数声明、括号表达式、属性访问、if-for-while-switch-catch-等语句中-和-内紧贴括号部分不允许有空格。" tabindex="-1">[强制] 在函数调用、函数声明、括号表达式、属性访问、<code>if / for / while / switch / catch</code> 等语句中，<code>()</code> 和 <code>[]</code> 内紧贴括号部分不允许有空格。 <a class="header-anchor" href="#强制-在函数调用、函数声明、括号表达式、属性访问、if-for-while-switch-catch-等语句中-和-内紧贴括号部分不允许有空格。" aria-label="Permalink to &quot;[强制] 在函数调用、函数声明、括号表达式、属性访问、`if / for / while / switch / catch` 等语句中，`()` 和 `[]` 内紧贴括号部分不允许有空格。&quot;">​</a></h5><h5 id="强制-单行声明的数组与对象-如果包含元素-和-内紧贴括号部分不允许包含空格。" tabindex="-1">[强制] 单行声明的数组与对象，如果包含元素，<code>{}</code> 和 <code>[]</code> 内紧贴括号部分不允许包含空格。 <a class="header-anchor" href="#强制-单行声明的数组与对象-如果包含元素-和-内紧贴括号部分不允许包含空格。" aria-label="Permalink to &quot;[强制] 单行声明的数组与对象，如果包含元素，`{}` 和 `[]` 内紧贴括号部分不允许包含空格。&quot;">​</a></h5><h5 id="强制-行尾不得有多余的空格。" tabindex="-1">[强制] 行尾不得有多余的空格。 <a class="header-anchor" href="#强制-行尾不得有多余的空格。" aria-label="Permalink to &quot;[强制] 行尾不得有多余的空格。&quot;">​</a></h5><h3 id="_2-3-换行" tabindex="-1">2.3 换行 <a class="header-anchor" href="#_2-3-换行" aria-label="Permalink to &quot;2.3 换行&quot;">​</a></h3><h5 id="强制-每个独立语句结束后必须换行。" tabindex="-1">[强制] 每个独立语句结束后必须换行。 <a class="header-anchor" href="#强制-每个独立语句结束后必须换行。" aria-label="Permalink to &quot;[强制] 每个独立语句结束后必须换行。&quot;">​</a></h5><h5 id="强制-每行不得超过-120-个字符。" tabindex="-1">[强制] 每行不得超过 <code>120</code> 个字符。 <a class="header-anchor" href="#强制-每行不得超过-120-个字符。" aria-label="Permalink to &quot;[强制] 每行不得超过 `120` 个字符。&quot;">​</a></h5><h5 id="强制-运算符处换行时-运算符必须在新行的行首。" tabindex="-1">[强制] 运算符处换行时，运算符必须在新行的行首。 <a class="header-anchor" href="#强制-运算符处换行时-运算符必须在新行的行首。" aria-label="Permalink to &quot;[强制] 运算符处换行时，运算符必须在新行的行首。&quot;">​</a></h5><h5 id="强制-在函数声明、函数表达式、函数调用、对象创建、数组创建、for语句等场景中-不允许在-或-前换行。" tabindex="-1">[强制] 在函数声明、函数表达式、函数调用、对象创建、数组创建、for语句等场景中，不允许在 <code>,</code> 或 <code>;</code> 前换行。 <a class="header-anchor" href="#强制-在函数声明、函数表达式、函数调用、对象创建、数组创建、for语句等场景中-不允许在-或-前换行。" aria-label="Permalink to &quot;[强制] 在函数声明、函数表达式、函数调用、对象创建、数组创建、for语句等场景中，不允许在 `,` 或 `;` 前换行。&quot;">​</a></h5><h5 id="建议-不同行为或逻辑的语句集-使用空行隔开-更易阅读。" tabindex="-1">[建议] 不同行为或逻辑的语句集，使用空行隔开，更易阅读。 <a class="header-anchor" href="#建议-不同行为或逻辑的语句集-使用空行隔开-更易阅读。" aria-label="Permalink to &quot;[建议] 不同行为或逻辑的语句集，使用空行隔开，更易阅读。&quot;">​</a></h5><h3 id="_2-4-语句" tabindex="-1">2.4 语句 <a class="header-anchor" href="#_2-4-语句" aria-label="Permalink to &quot;2.4 语句&quot;">​</a></h3><h5 id="强制-不得省略语句结束的分号。" tabindex="-1">[强制] 不得省略语句结束的分号。 <a class="header-anchor" href="#强制-不得省略语句结束的分号。" aria-label="Permalink to &quot;[强制] 不得省略语句结束的分号。&quot;">​</a></h5><h5 id="强制-在-if-else-for-do-while-语句中-即使只有一行-也不得省略块-。" tabindex="-1">[强制] 在 <code>if / else / for / do / while</code> 语句中，即使只有一行，也不得省略块 <code>{...}</code>。 <a class="header-anchor" href="#强制-在-if-else-for-do-while-语句中-即使只有一行-也不得省略块-。" aria-label="Permalink to &quot;[强制] 在 `if / else / for / do / while` 语句中，即使只有一行，也不得省略块 `{...}`。&quot;">​</a></h5><h5 id="强制-函数定义结束不允许添加分号。" tabindex="-1">[强制] 函数定义结束不允许添加分号。 <a class="header-anchor" href="#强制-函数定义结束不允许添加分号。" aria-label="Permalink to &quot;[强制] 函数定义结束不允许添加分号。&quot;">​</a></h5><h5 id="强制-iife-必须在函数表达式外添加-非-iife-不得在函数表达式外添加-。" tabindex="-1">[强制] <code>IIFE</code> 必须在函数表达式外添加 <code>(</code>，非 <code>IIFE</code> 不得在函数表达式外添加 <code>(</code>。 <a class="header-anchor" href="#强制-iife-必须在函数表达式外添加-非-iife-不得在函数表达式外添加-。" aria-label="Permalink to &quot;[强制] `IIFE` 必须在函数表达式外添加 `(`，非 `IIFE` 不得在函数表达式外添加 `(`。&quot;">​</a></h5><h2 id="_3-命名" tabindex="-1">3. 命名 <a class="header-anchor" href="#_3-命名" aria-label="Permalink to &quot;3. 命名&quot;">​</a></h2><h5 id="强制-变量-使用-camel命名法。" tabindex="-1">[强制] <code>变量</code> 使用 <code>Camel命名法</code>。 <a class="header-anchor" href="#强制-变量-使用-camel命名法。" aria-label="Permalink to &quot;[强制] `变量` 使用 `Camel命名法`。&quot;">​</a></h5><h5 id="强制-常量-使用-全部字母大写-单词间下划线分隔-的命名方式。" tabindex="-1">[强制] <code>常量</code> 使用 <code>全部字母大写，单词间下划线分隔</code> 的命名方式。 <a class="header-anchor" href="#强制-常量-使用-全部字母大写-单词间下划线分隔-的命名方式。" aria-label="Permalink to &quot;[强制] `常量` 使用 `全部字母大写，单词间下划线分隔` 的命名方式。&quot;">​</a></h5><h5 id="强制-函数-使用-camel命名法。" tabindex="-1">[强制] <code>函数</code> 使用 <code>Camel命名法</code>。 <a class="header-anchor" href="#强制-函数-使用-camel命名法。" aria-label="Permalink to &quot;[强制] `函数` 使用 `Camel命名法`。&quot;">​</a></h5><h5 id="强制-函数的-参数-使用-camel命名法。" tabindex="-1">[强制] 函数的 <code>参数</code> 使用 <code>Camel命名法</code>。 <a class="header-anchor" href="#强制-函数的-参数-使用-camel命名法。" aria-label="Permalink to &quot;[强制] 函数的 `参数` 使用 `Camel命名法`。&quot;">​</a></h5><h5 id="强制-类-使用-pascal命名法。" tabindex="-1">[强制] <code>类</code> 使用 <code>Pascal命名法</code>。 <a class="header-anchor" href="#强制-类-使用-pascal命名法。" aria-label="Permalink to &quot;[强制] `类` 使用 `Pascal命名法`。&quot;">​</a></h5><h5 id="强制-类的-方法-属性-使用-camel命名法。" tabindex="-1">[强制] 类的 <code>方法 / 属性</code> 使用 <code>Camel命名法</code>。 <a class="header-anchor" href="#强制-类的-方法-属性-使用-camel命名法。" aria-label="Permalink to &quot;[强制] 类的 `方法 / 属性` 使用 `Camel命名法`。&quot;">​</a></h5><h5 id="强制-枚举变量-使用-pascal命名法-枚举的属性-使用-全部字母大写-单词间下划线分隔-的命名方式。" tabindex="-1">[强制] <code>枚举变量</code> 使用 <code>Pascal命名法</code>，<code>枚举的属性</code> 使用 <code>全部字母大写，单词间下划线分隔</code> 的命名方式。 <a class="header-anchor" href="#强制-枚举变量-使用-pascal命名法-枚举的属性-使用-全部字母大写-单词间下划线分隔-的命名方式。" aria-label="Permalink to &quot;[强制] `枚举变量` 使用 `Pascal命名法`，`枚举的属性` 使用 `全部字母大写，单词间下划线分隔` 的命名方式。&quot;">​</a></h5><h5 id="强制-命名空间-使用-camel命名法。" tabindex="-1">[强制] <code>命名空间</code> 使用 <code>Camel命名法</code>。 <a class="header-anchor" href="#强制-命名空间-使用-camel命名法。" aria-label="Permalink to &quot;[强制] `命名空间` 使用 `Camel命名法`。&quot;">​</a></h5><h5 id="强制-由多个单词组成的缩写词-在命名中-根据当前命名法和出现的位置-所有字母的大小写与首字母的大小写保持一致。" tabindex="-1">[强制] 由多个单词组成的缩写词，在命名中，根据当前命名法和出现的位置，所有字母的大小写与首字母的大小写保持一致。 <a class="header-anchor" href="#强制-由多个单词组成的缩写词-在命名中-根据当前命名法和出现的位置-所有字母的大小写与首字母的大小写保持一致。" aria-label="Permalink to &quot;[强制] 由多个单词组成的缩写词，在命名中，根据当前命名法和出现的位置，所有字母的大小写与首字母的大小写保持一致。&quot;">​</a></h5><h5 id="强制-类名-使用-名词。" tabindex="-1">[强制] <code>类名</code> 使用 <code>名词</code>。 <a class="header-anchor" href="#强制-类名-使用-名词。" aria-label="Permalink to &quot;[强制] `类名` 使用 `名词`。&quot;">​</a></h5><h5 id="建议-函数名-使用-动宾短语。" tabindex="-1">[建议] <code>函数名</code> 使用 <code>动宾短语</code>。 <a class="header-anchor" href="#建议-函数名-使用-动宾短语。" aria-label="Permalink to &quot;[建议] `函数名` 使用 `动宾短语`。&quot;">​</a></h5><h5 id="建议-boolean-类型的变量使用-is-或-has-开头。" tabindex="-1">[建议] <code>boolean</code> 类型的变量使用 <code>is</code> 或 <code>has</code> 开头。 <a class="header-anchor" href="#建议-boolean-类型的变量使用-is-或-has-开头。" aria-label="Permalink to &quot;[建议] `boolean` 类型的变量使用 `is` 或 `has` 开头。&quot;">​</a></h5><h5 id="建议-promise对象-用-动宾短语的进行时-表达。" tabindex="-1">[建议] <code>Promise对象</code> 用 <code>动宾短语的进行时</code> 表达。 <a class="header-anchor" href="#建议-promise对象-用-动宾短语的进行时-表达。" aria-label="Permalink to &quot;[建议] `Promise对象` 用 `动宾短语的进行时` 表达。&quot;">​</a></h5>',43),i=[r];function t(h,l,n,s,u,f){return o(),e("div",null,i)}const m=a(c,[["render",t]]);export{q as __pageData,m as default};
