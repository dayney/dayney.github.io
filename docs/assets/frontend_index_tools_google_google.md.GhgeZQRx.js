import{_ as e,c as a,o as s,V as t}from"./chunks/framework.CsbsVE7l.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{"outline":"deep","editLink":false},"headers":[],"relativePath":"frontend/index/tools/google/google.md","filePath":"frontend/index/tools/google/google.md","lastUpdated":1748791719000}'),o={name:"frontend/index/tools/google/google.md"},i=t('<h3 id="google检索技巧" tabindex="-1">google检索技巧 <a class="header-anchor" href="#google检索技巧" aria-label="Permalink to &quot;google检索技巧&quot;">​</a></h3><hr><h4 id="运算符搜索" tabindex="-1">运算符搜索 <a class="header-anchor" href="#运算符搜索" aria-label="Permalink to &quot;运算符搜索&quot;">​</a></h4><h5 id="_1-使用双引号来获得-完全一致-的匹配搜获" tabindex="-1">1. 使用双引号来获得<code>&quot;</code>完全一致<code>&quot;</code>的匹配搜获 <a class="header-anchor" href="#_1-使用双引号来获得-完全一致-的匹配搜获" aria-label="Permalink to &quot;1. 使用双引号来获得``&quot;``完全一致``&quot;``的匹配搜获&quot;">​</a></h5><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&quot;你的问题&quot;</span></span></code></pre></div><h5 id="_2-使用site-在特定网站搜索" tabindex="-1">2. 使用<code>site:</code> 在特定网站搜索 <a class="header-anchor" href="#_2-使用site-在特定网站搜索" aria-label="Permalink to &quot;2. 使用``site:`` 在特定网站搜索&quot;">​</a></h5><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span> site:freecodecamp.org react</span></span></code></pre></div><h5 id="_3-使用-在搜索结果中排除某个词汇" tabindex="-1">3. 使用<code>-</code>在搜索结果中排除某个词汇 <a class="header-anchor" href="#_3-使用-在搜索结果中排除某个词汇" aria-label="Permalink to &quot;3. 使用``-``在搜索结果中排除某个词汇&quot;">​</a></h5><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>前端架构 -www.csdn.net</span></span></code></pre></div><h5 id="_4-使用imagesize-搜索特定大小的图片" tabindex="-1">4. 使用<code>imagesize:</code>搜索特定大小的图片 <a class="header-anchor" href="#_4-使用imagesize-搜索特定大小的图片" aria-label="Permalink to &quot;4. 使用``imagesize:``搜索特定大小的图片&quot;">​</a></h5><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>钢铁侠 images imagesize:500x600</span></span></code></pre></div><h5 id="_5-使用filetype-搜索特定文件类型" tabindex="-1">5. 使用<code>filetype:</code>搜索特定文件类型 <a class="header-anchor" href="#_5-使用filetype-搜索特定文件类型" aria-label="Permalink to &quot;5. 使用``filetype:``搜索特定文件类型&quot;">​</a></h5><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>前端架构 tutorial filetype:pdf</span></span></code></pre></div><h5 id="_6-在搜索中使用通配符" tabindex="-1">6. 在搜索中使用通配符<code>*</code> <a class="header-anchor" href="#_6-在搜索中使用通配符" aria-label="Permalink to &quot;6. 在搜索中使用通配符``*``&quot;">​</a></h5><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>前端开发中*ue的使用方法</span></span></code></pre></div><h5 id="_7-使用-or-或-、-and-且-逻辑合并搜索" tabindex="-1">7. 使用 <code>OR（或）</code>、 <code>AND（且）</code>逻辑合并搜索 <a class="header-anchor" href="#_7-使用-or-或-、-and-且-逻辑合并搜索" aria-label="Permalink to &quot;7. 使用 ``OR（或）``、 ``AND（且）``逻辑合并搜索&quot;">​</a></h5><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>React OR Angular</span></span>\n<span class="line"><span>React AND Vue</span></span></code></pre></div><h5 id="_8-在两个数字间使用-after-在-之后-、-before-在-之前-或-来筛选结果" tabindex="-1">8. 在两个数字间使用 <code>AFTER:（在……之后）</code>、 <code>BEFORE:（在……之前）</code> 或 <code>..</code> 来筛选结果 <a class="header-anchor" href="#_8-在两个数字间使用-after-在-之后-、-before-在-之前-或-来筛选结果" aria-label="Permalink to &quot;8. 在两个数字间使用 ``AFTER:（在……之后）``、 ``BEFORE:（在……之前）`` 或 ``..`` 来筛选结果&quot;">​</a></h5><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>React教程 after:2020</span></span>\n<span class="line"><span>会返回迟于2020年发布的结果。</span></span></code></pre></div><p>参考文档</p><ul><li><p><a href="https://www.freecodecamp.org/chinese/news/how-to-google-like-a-pro-10-tips-for-effective-googling/" target="_blank" rel="noreferrer">如何像专家一样高效使用 Google 搜索</a></p></li><li><p><a href="https://support.google.com/websearch/answer/35890?hl=zh-Hans&amp;ref_topic=3081620&amp;sjid=3157386878497674685-AP" target="_blank" rel="noreferrer">在 Google 上进行高级搜索</a></p></li></ul>',21),l=[i];function n(c,d,p,r,h,g){return s(),a("div",null,l)}const m=e(o,[["render",n]]);export{b as __pageData,m as default};
