import{_ as a,c as e,o as t,V as i}from"./chunks/framework.CsbsVE7l.js";const q=JSON.parse('{"title":"JavaScript注释规范","description":"","frontmatter":{"outline":"deep","editLink":false},"headers":[],"relativePath":"frontend/index/javascript/javascript-comment.md","filePath":"frontend/index/javascript/javascript-comment.md","lastUpdated":1748791719000}'),o={name:"frontend/index/javascript/javascript-comment.md"},r=i('<h1 id="javascript注释规范" tabindex="-1">JavaScript注释规范 <a class="header-anchor" href="#javascript注释规范" aria-label="Permalink to &quot;JavaScript注释规范&quot;">​</a></h1><blockquote><p>提示：函数的注释可以使用阿里千义来对方法进行注释。</p></blockquote><h2 id="_1-注释规范" tabindex="-1">1. 注释规范 <a class="header-anchor" href="#_1-注释规范" aria-label="Permalink to &quot;1. 注释规范&quot;">​</a></h2><h3 id="_1-1-单行注释" tabindex="-1">1.1 单行注释 <a class="header-anchor" href="#_1-1-单行注释" aria-label="Permalink to &quot;1.1 单行注释&quot;">​</a></h3><h5 id="强制-必须独占一行。-后跟一个空格-缩进与下一行被注释说明的代码一致。" tabindex="-1">[强制] 必须独占一行。<code>//</code> 后跟一个空格，缩进与下一行被注释说明的代码一致。 <a class="header-anchor" href="#强制-必须独占一行。-后跟一个空格-缩进与下一行被注释说明的代码一致。" aria-label="Permalink to &quot;[强制] 必须独占一行。`//` 后跟一个空格，缩进与下一行被注释说明的代码一致。&quot;">​</a></h5><h3 id="_1-2-多行注释" tabindex="-1">1.2 多行注释 <a class="header-anchor" href="#_1-2-多行注释" aria-label="Permalink to &quot;1.2 多行注释&quot;">​</a></h3><h5 id="建议-避免使用-这样的多行注释。有多行注释内容时-使用多个单行注释。" tabindex="-1">[建议] 避免使用 <code>/*...*/</code> 这样的多行注释。有多行注释内容时，使用多个单行注释。 <a class="header-anchor" href="#建议-避免使用-这样的多行注释。有多行注释内容时-使用多个单行注释。" aria-label="Permalink to &quot;[建议] 避免使用 `/*...*/` 这样的多行注释。有多行注释内容时，使用多个单行注释。&quot;">​</a></h5><h3 id="_1-3-文档化注释" tabindex="-1">1.3 文档化注释 <a class="header-anchor" href="#_1-3-文档化注释" aria-label="Permalink to &quot;1.3 文档化注释&quot;">​</a></h3><h5 id="强制-为了便于代码阅读和自文档化-以下内容必须包含以-形式的块注释中。" tabindex="-1">[强制] 为了便于代码阅读和自文档化，以下内容必须包含以 <code>/**...*/</code> 形式的块注释中。 <a class="header-anchor" href="#强制-为了便于代码阅读和自文档化-以下内容必须包含以-形式的块注释中。" aria-label="Permalink to &quot;[强制] 为了便于代码阅读和自文档化，以下内容必须包含以 `/**...*/` 形式的块注释中。&quot;">​</a></h5><p>解释：</p><ol><li>文件</li><li>namespace</li><li>类</li><li>函数或方法</li><li>类属性</li><li>事件</li><li>全局变量</li><li>常量</li><li>AMD 模块</li></ol><h5 id="强制-文档注释前必须空一行。" tabindex="-1">[强制] 文档注释前必须空一行。 <a class="header-anchor" href="#强制-文档注释前必须空一行。" aria-label="Permalink to &quot;[强制] 文档注释前必须空一行。&quot;">​</a></h5><h5 id="建议-自文档化的文档说明-what-而不是-how。" tabindex="-1">[建议] 自文档化的文档说明 what，而不是 how。 <a class="header-anchor" href="#建议-自文档化的文档说明-what-而不是-how。" aria-label="Permalink to &quot;[建议] 自文档化的文档说明 what，而不是 how。&quot;">​</a></h5><h3 id="_1-4-类型定义" tabindex="-1">1.4 类型定义 <a class="header-anchor" href="#_1-4-类型定义" aria-label="Permalink to &quot;1.4 类型定义&quot;">​</a></h3><h5 id="强制-类型定义都是以-开始-以-结束。" tabindex="-1">[强制] 类型定义都是以<code>{</code>开始, 以<code>}</code>结束。 <a class="header-anchor" href="#强制-类型定义都是以-开始-以-结束。" aria-label="Permalink to &quot;[强制] 类型定义都是以`{`开始, 以`}`结束。&quot;">​</a></h5><p>解释：</p><p>常用类型如：{string}, {number}, {boolean}, {Object}, {Function}, {RegExp}, {Array}, {Date}。</p><p>类型不仅局限于内置的类型，也可以是自定义的类型。比如定义了一个类 Developer，就可以使用它来定义一个参数和返回值的类型。</p><h3 id="_1-5-文件注释" tabindex="-1">1.5 文件注释 <a class="header-anchor" href="#_1-5-文件注释" aria-label="Permalink to &quot;1.5 文件注释&quot;">​</a></h3><h5 id="强制-文件顶部必须包含文件注释-用-file-标识文件说明。" tabindex="-1">[强制] 文件顶部必须包含文件注释，用 <code>@file</code> 标识文件说明。 <a class="header-anchor" href="#强制-文件顶部必须包含文件注释-用-file-标识文件说明。" aria-label="Permalink to &quot;[强制] 文件顶部必须包含文件注释，用 `@file` 标识文件说明。&quot;">​</a></h5><p>示例：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@file</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Describe the file</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span></code></pre></div><h5 id="建议-文件注释中可以用-author-标识开发者信息。" tabindex="-1">[建议] 文件注释中可以用 <code>@author</code> 标识开发者信息。 <a class="header-anchor" href="#建议-文件注释中可以用-author-标识开发者信息。" aria-label="Permalink to &quot;[建议] 文件注释中可以用 `@author` 标识开发者信息。&quot;">​</a></h5><h3 id="_1-6-命名空间注释" tabindex="-1">1.6 命名空间注释 <a class="header-anchor" href="#_1-6-命名空间注释" aria-label="Permalink to &quot;1.6 命名空间注释&quot;">​</a></h3><h5 id="建议-命名空间使用-namespace-标识。" tabindex="-1">[建议] 命名空间使用 <code>@namespace</code> 标识。 <a class="header-anchor" href="#建议-命名空间使用-namespace-标识。" aria-label="Permalink to &quot;[建议] 命名空间使用 `@namespace` 标识。&quot;">​</a></h5><h3 id="_1-7-类注释" tabindex="-1">1.7 类注释 <a class="header-anchor" href="#_1-7-类注释" aria-label="Permalink to &quot;1.7 类注释&quot;">​</a></h3><h5 id="建议-使用-class-标记类或构造函数。" tabindex="-1">[建议] 使用 <code>@class</code> 标记类或构造函数。 <a class="header-anchor" href="#建议-使用-class-标记类或构造函数。" aria-label="Permalink to &quot;[建议] 使用 `@class` 标记类或构造函数。&quot;">​</a></h5><h5 id="建议-使用-extends-标记类的继承信息。" tabindex="-1">[建议] 使用 <code>@extends</code> 标记类的继承信息。 <a class="header-anchor" href="#建议-使用-extends-标记类的继承信息。" aria-label="Permalink to &quot;[建议] 使用 `@extends` 标记类的继承信息。&quot;">​</a></h5><h5 id="强制-使用包装方式扩展类成员时-必须通过-lends-进行重新指向。" tabindex="-1">[强制] 使用包装方式扩展类成员时， 必须通过 <code>@lends</code> 进行重新指向。 <a class="header-anchor" href="#强制-使用包装方式扩展类成员时-必须通过-lends-进行重新指向。" aria-label="Permalink to &quot;[强制] 使用包装方式扩展类成员时， 必须通过 `@lends` 进行重新指向。&quot;">​</a></h5><h5 id="强制-类的属性或方法等成员信息使用-public-protected-private-中的任意一个-指明可访问性。" tabindex="-1">[强制] 类的属性或方法等成员信息使用 <code>@public</code> / <code>@protected</code> / <code>@private</code> 中的任意一个，指明可访问性。 <a class="header-anchor" href="#强制-类的属性或方法等成员信息使用-public-protected-private-中的任意一个-指明可访问性。" aria-label="Permalink to &quot;[强制] 类的属性或方法等成员信息使用 `@public` / `@protected` / `@private` 中的任意一个，指明可访问性。&quot;">​</a></h5><h3 id="_1-8-函数-方法注释" tabindex="-1">1.8 函数/方法注释 <a class="header-anchor" href="#_1-8-函数-方法注释" aria-label="Permalink to &quot;1.8 函数/方法注释&quot;">​</a></h3><h5 id="强制-函数-方法注释必须包含函数说明-有参数和返回值时必须使用注释标识。" tabindex="-1">[强制] 函数/方法注释必须包含函数说明，有参数和返回值时必须使用注释标识。 <a class="header-anchor" href="#强制-函数-方法注释必须包含函数说明-有参数和返回值时必须使用注释标识。" aria-label="Permalink to &quot;[强制] 函数/方法注释必须包含函数说明，有参数和返回值时必须使用注释标识。&quot;">​</a></h5><h5 id="强制-参数和返回值注释必须包含类型信息和说明。" tabindex="-1">[强制] 参数和返回值注释必须包含类型信息和说明。 <a class="header-anchor" href="#强制-参数和返回值注释必须包含类型信息和说明。" aria-label="Permalink to &quot;[强制] 参数和返回值注释必须包含类型信息和说明。&quot;">​</a></h5><h5 id="建议-当函数是内部函数-外部不可访问时-可以使用-inner-标识。" tabindex="-1">[建议] 当函数是内部函数，外部不可访问时，可以使用 <code>@inner</code> 标识。 <a class="header-anchor" href="#建议-当函数是内部函数-外部不可访问时-可以使用-inner-标识。" aria-label="Permalink to &quot;[建议] 当函数是内部函数，外部不可访问时，可以使用 `@inner` 标识。&quot;">​</a></h5><h3 id="_1-9-事件注释" tabindex="-1">1.9 事件注释 <a class="header-anchor" href="#_1-9-事件注释" aria-label="Permalink to &quot;1.9 事件注释&quot;">​</a></h3><h5 id="强制-必须使用-event-标识事件-事件参数的标识与方法描述的参数标识相同。" tabindex="-1">[强制] 必须使用 <code>@event</code> 标识事件，事件参数的标识与方法描述的参数标识相同。 <a class="header-anchor" href="#强制-必须使用-event-标识事件-事件参数的标识与方法描述的参数标识相同。" aria-label="Permalink to &quot;[强制] 必须使用 `@event` 标识事件，事件参数的标识与方法描述的参数标识相同。&quot;">​</a></h5><h5 id="强制-在会广播事件的函数前使用-fires-标识广播的事件-在广播事件代码前使用-event-标识事件。" tabindex="-1">[强制] 在会广播事件的函数前使用 <code>@fires</code> 标识广播的事件，在广播事件代码前使用 <code>@event</code> 标识事件。 <a class="header-anchor" href="#强制-在会广播事件的函数前使用-fires-标识广播的事件-在广播事件代码前使用-event-标识事件。" aria-label="Permalink to &quot;[强制] 在会广播事件的函数前使用 `@fires` 标识广播的事件，在广播事件代码前使用 `@event` 标识事件。&quot;">​</a></h5><h3 id="_1-10-常量注释" tabindex="-1">1.10 常量注释 <a class="header-anchor" href="#_1-10-常量注释" aria-label="Permalink to &quot;1.10 常量注释&quot;">​</a></h3><h5 id="强制-常量必须使用-const-标记-并包含说明和类型信息。" tabindex="-1">[强制] 常量必须使用 <code>@const</code> 标记，并包含说明和类型信息。 <a class="header-anchor" href="#强制-常量必须使用-const-标记-并包含说明和类型信息。" aria-label="Permalink to &quot;[强制] 常量必须使用 `@const` 标记，并包含说明和类型信息。&quot;">​</a></h5><h3 id="_1-11-复杂类型注释" tabindex="-1">1.11 复杂类型注释 <a class="header-anchor" href="#_1-11-复杂类型注释" aria-label="Permalink to &quot;1.11 复杂类型注释&quot;">​</a></h3><h5 id="建议-对于类型未定义的复杂结构的注释-可以使用-typedef-标识来定义。" tabindex="-1">[建议] 对于类型未定义的复杂结构的注释，可以使用 <code>@typedef</code> 标识来定义。 <a class="header-anchor" href="#建议-对于类型未定义的复杂结构的注释-可以使用-typedef-标识来定义。" aria-label="Permalink to &quot;[建议] 对于类型未定义的复杂结构的注释，可以使用 `@typedef` 标识来定义。&quot;">​</a></h5><h3 id="_1-12-amd-模块注释" tabindex="-1">1.12 AMD 模块注释 <a class="header-anchor" href="#_1-12-amd-模块注释" aria-label="Permalink to &quot;1.12 AMD 模块注释&quot;">​</a></h3><h5 id="强制-amd-模块使用-module-或-exports-标识。" tabindex="-1">[强制] AMD 模块使用 <code>@module</code> 或 <code>@exports</code> 标识。 <a class="header-anchor" href="#强制-amd-模块使用-module-或-exports-标识。" aria-label="Permalink to &quot;[强制] AMD 模块使用 `@module` 或 `@exports` 标识。&quot;">​</a></h5><h3 id="_1-13-细节注释" tabindex="-1">1.13 细节注释 <a class="header-anchor" href="#_1-13-细节注释" aria-label="Permalink to &quot;1.13 细节注释&quot;">​</a></h3><h5 id="建议-细节注释遵循单行注释的格式。说明必须换行时-每行是一个单行注释的起始。" tabindex="-1">[建议] 细节注释遵循单行注释的格式。说明必须换行时，每行是一个单行注释的起始。 <a class="header-anchor" href="#建议-细节注释遵循单行注释的格式。说明必须换行时-每行是一个单行注释的起始。" aria-label="Permalink to &quot;[建议] 细节注释遵循单行注释的格式。说明必须换行时，每行是一个单行注释的起始。&quot;">​</a></h5><h5 id="强制-有时我们会使用一些特殊标记进行说明。特殊标记必须使用单行注释的形式。下面列举了一些常用标记" tabindex="-1">[强制] 有时我们会使用一些特殊标记进行说明。特殊标记必须使用单行注释的形式。下面列举了一些常用标记： <a class="header-anchor" href="#强制-有时我们会使用一些特殊标记进行说明。特殊标记必须使用单行注释的形式。下面列举了一些常用标记" aria-label="Permalink to &quot;[强制] 有时我们会使用一些特殊标记进行说明。特殊标记必须使用单行注释的形式。下面列举了一些常用标记：&quot;">​</a></h5><p>解释：</p><ol><li>TODO: 有功能待实现。此时需要对将要实现的功能进行简单说明。</li><li>FIXME: 该处代码运行没问题，但可能由于时间赶或者其他原因，需要修正。此时需要对如何修正进行简单说明。</li><li>HACK: 为修正某些问题而写的不太好或者使用了某些诡异手段的代码。此时需要对思路或诡异手段进行描述。</li><li>XXX: 该处存在陷阱。此时需要对陷阱进行描述。</li></ol>',48),l=[r];function h(d,n,s,c,u,p){return t(),e("div",null,l)}const m=a(o,[["render",h]]);export{q as __pageData,m as default};
