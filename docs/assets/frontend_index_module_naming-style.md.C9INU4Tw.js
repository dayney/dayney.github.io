import{_ as a,c as e,o as s,V as n}from"./chunks/framework.CsbsVE7l.js";const m=JSON.parse('{"title":"模块命名规范","description":"","frontmatter":{"outline":"deep","editLink":false},"headers":[],"relativePath":"frontend/index/module/naming-style.md","filePath":"frontend/index/module/naming-style.md","lastUpdated":1749709576000}'),l={name:"frontend/index/module/naming-style.md"},i=n(`<h1 id="模块命名规范" tabindex="-1">模块命名规范 <a class="header-anchor" href="#模块命名规范" aria-label="Permalink to &quot;模块命名规范&quot;">​</a></h1><h2 id="_1-基本原则" tabindex="-1">1. 基本原则 <a class="header-anchor" href="#_1-基本原则" aria-label="Permalink to &quot;1. 基本原则&quot;">​</a></h2><ul><li>遵循模块化开发规范</li><li>保持命名语义化</li><li>保持模块结构清晰</li></ul><h2 id="_2-模块命名规范" tabindex="-1">2. 模块命名规范 <a class="header-anchor" href="#_2-模块命名规范" aria-label="Permalink to &quot;2. 模块命名规范&quot;">​</a></h2><h3 id="_2-1-模块命名" tabindex="-1">2.1 模块命名 <a class="header-anchor" href="#_2-1-模块命名" aria-label="Permalink to &quot;2.1 模块命名&quot;">​</a></h3><ul><li>使用小写字母</li><li>使用连字符（-）分隔单词</li><li>模块名要有意义</li></ul><h3 id="_2-2-模块命名示例" tabindex="-1">2.2 模块命名示例 <a class="header-anchor" href="#_2-2-模块命名示例" aria-label="Permalink to &quot;2.2 模块命名示例&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>user-profile</span></span>
<span class="line"><span>order-management</span></span>
<span class="line"><span>payment-processor</span></span></code></pre></div><h2 id="_3-最佳实践" tabindex="-1">3. 最佳实践 <a class="header-anchor" href="#_3-最佳实践" aria-label="Permalink to &quot;3. 最佳实践&quot;">​</a></h2><h3 id="_3-1-模块结构" tabindex="-1">3.1 模块结构 <a class="header-anchor" href="#_3-1-模块结构" aria-label="Permalink to &quot;3.1 模块结构&quot;">​</a></h3><ul><li>每个模块要有清晰的职责</li><li>模块之间要保持低耦合</li><li>模块内部要保持高内聚</li></ul><h3 id="_3-2-模块组织" tabindex="-1">3.2 模块组织 <a class="header-anchor" href="#_3-2-模块组织" aria-label="Permalink to &quot;3.2 模块组织&quot;">​</a></h3><ul><li>相关功能放在同一模块</li><li>模块之间通过接口通信</li><li>避免模块之间的循环依赖</li></ul><h3 id="_3-3-模块示例" tabindex="-1">3.3 模块示例 <a class="header-anchor" href="#_3-3-模块示例" aria-label="Permalink to &quot;3.3 模块示例&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>user-profile/</span></span>
<span class="line"><span>  ├── components/</span></span>
<span class="line"><span>  │   ├── UserInfo.js</span></span>
<span class="line"><span>  │   └── UserSettings.js</span></span>
<span class="line"><span>  ├── services/</span></span>
<span class="line"><span>  │   └── userService.js</span></span>
<span class="line"><span>  ├── utils/</span></span>
<span class="line"><span>  │   └── formatter.js</span></span>
<span class="line"><span>  └── index.js</span></span></code></pre></div><h2 id="_4-模块命名检查清单" tabindex="-1">4. 模块命名检查清单 <a class="header-anchor" href="#_4-模块命名检查清单" aria-label="Permalink to &quot;4. 模块命名检查清单&quot;">​</a></h2><ul><li>[ ] 模块名使用小写字母</li><li>[ ] 模块名使用连字符分隔单词</li><li>[ ] 模块名有意义</li><li>[ ] 模块职责清晰</li><li>[ ] 模块之间低耦合</li><li>[ ] 模块内部高内聚</li><li>[ ] 相关功能放在同一模块</li><li>[ ] 模块之间通过接口通信</li><li>[ ] 避免模块之间的循环依赖</li><li>[ ] 模块结构清晰</li></ul><p><a href="https://github.com/o2team/guide" target="_blank" rel="noreferrer">o2team/guide</a></p>`,18),t=[i];function r(o,p,d,h,c,u){return s(),e("div",null,t)}const b=a(l,[["render",r]]);export{m as __pageData,b as default};
