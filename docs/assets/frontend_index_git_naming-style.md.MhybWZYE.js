import{_ as a,c as e,o as l,V as i}from"./chunks/framework.CsbsVE7l.js";const b=JSON.parse('{"title":"Git 命名规范","description":"","frontmatter":{"outline":"deep","editLink":false},"headers":[],"relativePath":"frontend/index/git/naming-style.md","filePath":"frontend/index/git/naming-style.md","lastUpdated":1748791719000}'),n={name:"frontend/index/git/naming-style.md"},s=i(`<h1 id="git-命名规范" tabindex="-1">Git 命名规范 <a class="header-anchor" href="#git-命名规范" aria-label="Permalink to &quot;Git 命名规范&quot;">​</a></h1><h2 id="_1-基本原则" tabindex="-1">1. 基本原则 <a class="header-anchor" href="#_1-基本原则" aria-label="Permalink to &quot;1. 基本原则&quot;">​</a></h2><ul><li>遵循 Git 官方规范</li><li>保持命名语义化</li><li>保持提交信息清晰</li></ul><h2 id="_2-分支命名规范" tabindex="-1">2. 分支命名规范 <a class="header-anchor" href="#_2-分支命名规范" aria-label="Permalink to &quot;2. 分支命名规范&quot;">​</a></h2><h3 id="_2-1-主分支" tabindex="-1">2.1 主分支 <a class="header-anchor" href="#_2-1-主分支" aria-label="Permalink to &quot;2.1 主分支&quot;">​</a></h3><ul><li><code>main</code>: 主分支，用于生产环境</li><li><code>develop</code>: 开发分支，用于开发环境</li></ul><h3 id="_2-2-功能分支" tabindex="-1">2.2 功能分支 <a class="header-anchor" href="#_2-2-功能分支" aria-label="Permalink to &quot;2.2 功能分支&quot;">​</a></h3><ul><li><code>feature/功能名称</code>: 功能分支，用于开发新功能</li><li><code>bugfix/问题描述</code>: 修复分支，用于修复问题</li><li><code>hotfix/问题描述</code>: 紧急修复分支，用于修复生产环境问题</li><li><code>release/版本号</code>: 发布分支，用于发布新版本</li></ul><h3 id="_2-3-分支命名示例" tabindex="-1">2.3 分支命名示例 <a class="header-anchor" href="#_2-3-分支命名示例" aria-label="Permalink to &quot;2.3 分支命名示例&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>feature/user-login</span></span>
<span class="line"><span>bugfix/login-error</span></span>
<span class="line"><span>hotfix/payment-failure</span></span>
<span class="line"><span>release/v1.0.0</span></span></code></pre></div><h2 id="_3-提交信息规范" tabindex="-1">3. 提交信息规范 <a class="header-anchor" href="#_3-提交信息规范" aria-label="Permalink to &quot;3. 提交信息规范&quot;">​</a></h2><h3 id="_3-1-提交信息格式" tabindex="-1">3.1 提交信息格式 <a class="header-anchor" href="#_3-1-提交信息格式" aria-label="Permalink to &quot;3.1 提交信息格式&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&lt;类型&gt;: &lt;描述&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[可选的正文]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[可选的脚注]</span></span></code></pre></div><h3 id="_3-2-提交类型" tabindex="-1">3.2 提交类型 <a class="header-anchor" href="#_3-2-提交类型" aria-label="Permalink to &quot;3.2 提交类型&quot;">​</a></h3><ul><li><code>feat</code>: 新功能</li><li><code>fix</code>: 修复问题</li><li><code>docs</code>: 文档更新</li><li><code>style</code>: 代码格式（不影响代码运行的变动）</li><li><code>refactor</code>: 重构（既不是新增功能，也不是修改 bug 的代码变动）</li><li><code>perf</code>: 性能优化</li><li><code>test</code>: 增加测试</li><li><code>chore</code>: 构建过程或辅助工具的变动</li><li><code>revert</code>: 回滚到上一个版本</li></ul><h3 id="_3-3-提交信息示例" tabindex="-1">3.3 提交信息示例 <a class="header-anchor" href="#_3-3-提交信息示例" aria-label="Permalink to &quot;3.3 提交信息示例&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>feat: 添加用户登录功能</span></span>
<span class="line"><span></span></span>
<span class="line"><span>- 实现用户名密码登录</span></span>
<span class="line"><span>- 添加记住密码功能</span></span>
<span class="line"><span>- 添加验证码功能</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Closes #123</span></span></code></pre></div><h2 id="_4-标签命名规范" tabindex="-1">4. 标签命名规范 <a class="header-anchor" href="#_4-标签命名规范" aria-label="Permalink to &quot;4. 标签命名规范&quot;">​</a></h2><h3 id="_4-1-标签格式" tabindex="-1">4.1 标签格式 <a class="header-anchor" href="#_4-1-标签格式" aria-label="Permalink to &quot;4.1 标签格式&quot;">​</a></h3><ul><li><code>v主版本号.次版本号.修订号</code></li><li>例如：<code>v1.0.0</code></li></ul><h3 id="_4-2-版本号规则" tabindex="-1">4.2 版本号规则 <a class="header-anchor" href="#_4-2-版本号规则" aria-label="Permalink to &quot;4.2 版本号规则&quot;">​</a></h3><ul><li>主版本号：不兼容的 API 修改</li><li>次版本号：向下兼容的功能性新增</li><li>修订号：向下兼容的问题修正</li></ul><h2 id="_5-最佳实践" tabindex="-1">5. 最佳实践 <a class="header-anchor" href="#_5-最佳实践" aria-label="Permalink to &quot;5. 最佳实践&quot;">​</a></h2><h3 id="_5-1-分支管理" tabindex="-1">5.1 分支管理 <a class="header-anchor" href="#_5-1-分支管理" aria-label="Permalink to &quot;5.1 分支管理&quot;">​</a></h3><ul><li>保持分支结构清晰</li><li>及时删除已合并的分支</li><li>定期同步主分支代码</li></ul><h3 id="_5-2-提交管理" tabindex="-1">5.2 提交管理 <a class="header-anchor" href="#_5-2-提交管理" aria-label="Permalink to &quot;5.2 提交管理&quot;">​</a></h3><ul><li>每个提交只做一件事</li><li>提交信息要清晰明了</li><li>提交前进行代码审查</li></ul><h3 id="_5-3-标签管理" tabindex="-1">5.3 标签管理 <a class="header-anchor" href="#_5-3-标签管理" aria-label="Permalink to &quot;5.3 标签管理&quot;">​</a></h3><ul><li>每个发布版本都要打标签</li><li>标签信息要包含版本说明</li><li>定期清理过期标签</li></ul><h2 id="_6-命名规范检查清单" tabindex="-1">6. 命名规范检查清单 <a class="header-anchor" href="#_6-命名规范检查清单" aria-label="Permalink to &quot;6. 命名规范检查清单&quot;">​</a></h2><ul><li>[ ] 分支命名符合规范</li><li>[ ] 提交信息符合规范</li><li>[ ] 标签命名符合规范</li><li>[ ] 提交类型正确</li><li>[ ] 提交描述清晰</li><li>[ ] 版本号格式正确</li><li>[ ] 分支结构清晰</li><li>[ ] 提交粒度合适</li><li>[ ] 标签信息完整</li><li>[ ] 定期同步主分支</li><li>[ ] 及时删除已合并分支</li><li>[ ] 定期清理过期标签</li></ul>`,31),t=[s];function o(d,r,c,h,p,u){return l(),e("div",null,t)}const f=a(n,[["render",o]]);export{b as __pageData,f as default};
