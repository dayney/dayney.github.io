import{_ as a,c as s,o as e,V as n}from"./chunks/framework.CthfA3PS.js";const _=JSON.parse('{"title":"replaceAll 匹配标记","description":"","frontmatter":{"outline":"deep","editLink":false},"headers":[],"relativePath":"frontend/javascript/replaceAll.md","filePath":"frontend/javascript/replaceAll.md","lastUpdated":1717399818000}'),l={name:"frontend/javascript/replaceAll.md"},t=n(`<h1 id="replaceall-匹配标记" tabindex="-1">replaceAll 匹配标记 <a class="header-anchor" href="#replaceall-匹配标记" aria-label="Permalink to &quot;replaceAll 匹配标记&quot;">​</a></h1><h2 id="_1-背景" tabindex="-1">1 背景 <a class="header-anchor" href="#_1-背景" aria-label="Permalink to &quot;1 背景&quot;">​</a></h2><p>记得以前有个需求是，一篇文章，要对后端给的关键词进行高亮标记，我记得以前是使用 <strong>eval</strong> 来做的，虽然知道不应该使用 <strong>eval</strong>，但是一直没有找到合适的方式，后面还是用的<strong>eval</strong>的方案。</p><h2 id="_2-前言" tabindex="-1">2 前言 <a class="header-anchor" href="#_2-前言" aria-label="Permalink to &quot;2 前言&quot;">​</a></h2><p>一篇文章或者产品描述的时候，对关键词进行高亮显示。</p><h2 id="_3-实现" tabindex="-1">3 实现 <a class="header-anchor" href="#_3-实现" aria-label="Permalink to &quot;3 实现&quot;">​</a></h2><p>关键点</p><ul><li>RegExp的第二个参数的运用</li><li>replaceAll第二个参数的运用，可以是一个 ** function **，匹配后返回的是命中的res，然后进行替换。</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>function highlightKeywords(text, keywords) {</span></span>
<span class="line"><span>      // 将关键词转换为正则表达式</span></span>
<span class="line"><span>      const regex = new RegExp(keywords.join(&#39;|&#39;), &#39;ig&#39;);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      // 使用 replace 方法替换匹配的关键词为带有红色标记的版本</span></span>
<span class="line"><span>      return text.replaceAll(regex, (match) =&gt; \`&lt;span style=&quot;color:red;&quot;&gt;\${match}&lt;/span&gt;\`);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 示例用法</span></span>
<span class="line"><span>const passage = &quot;今天天气非常好,我打算去公园散散步。&quot;;</span></span>
<span class="line"><span>const keywords = [&quot;天气&quot;, &quot;公园&quot;];</span></span>
<span class="line"><span>const highlightedText = highlightKeywords(passage, keywords);</span></span>
<span class="line"><span>console.log(highlightedText);</span></span></code></pre></div><h6 id="tips" tabindex="-1">tips <a class="header-anchor" href="#tips" aria-label="Permalink to &quot;tips&quot;">​</a></h6><p>现在有 gpt，关键时候使用gpt，很有帮助和用处。</p>`,11),p=[t];function o(r,i,c,d,h,g){return e(),s("div",null,p)}const f=a(l,[["render",o]]);export{_ as __pageData,f as default};
